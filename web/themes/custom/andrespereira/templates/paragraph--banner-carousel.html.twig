{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'banner-slider'
  ]
%}
{% block paragraph %}
	<div{{attributes.addClass(classes)}}>
		{% block content %}
			<div class="container">
				<div class="banner-slider__header ">
					<h3>{{content.field_bc_title}}</h3>
					<p>{{content.field_bc_intro[0]}}</p>
				</div>
				<div class="banner-slider__items js-slider">
					{% set carousels = prep.carousels %}
					{% for carousel in carousels %}
						{% set title = carousel.title[0] %}
						{% set body = carousel.body[0] %}
						{% set image = carousel.image[0] %}
						{% set cta = carousel.cta[0] %}
						{% set support = carousel.support[0] %}
						<div class="banner-slider__item">
							<div class="banner-slider__image">
								{{image}}
								{% if support == 0 %}
									<div class="banner-slider__info">
								{% endif %}
								{% if support > 0 %}
									<div class="banner-slider__info banner-slider__info--flex">
								{% endif %}
									<div class="banner-slider__info-left">
										<div class="banner-slider__title">
											{{title}}
										</div>
										<div class="banner-slider__body">
											{{body}}
										</div>
										<div class="banner-slider__cta">
											{{cta}}
										</div>
									</div>
									<div class="banner-slider__info-right">
										<div class="banner-slider__support">
											{{support}}
										</div>
									</div>
								</div>
							</div>
						</div>
					{% endfor %}
				</div>
			</div>
		{% endblock %}
	</div>
{% endblock paragraph %}
